#!/bin/bash

D=$(dirname "$0")
cd "$D"

info() {
    echo "$akc_prompt####$akc_default $1$akc_default"
}

if test -e .git-tag; then
    if test -e .git; then
        echo "Both .git directory and .git-tag file are present!"
        exit 15
    fi
    AKUA_VERSION=$(cat .git-tag)
else
    AKUA_VERSION=$(git describe --tags --always --match "v[0-9.]*")
fi

if test "x$AKUA_VERSION" = "x"; then
    echo "Unable to determine version for akua!"
    exit 16
fi

AKUA_VERSION_FULL="$AKUA_VERSION"

export LANG=C

if echo "$AKUA_VERSION_FULL" | grep -v -- - >/dev/null 2>/dev/null ; then
    D=`date +'%Y-%b-%d'`
    AKUA_VERSION_FULL="$AKUA_VERSION_FULL-$D"
fi

info "Building image ${akc_good}$AKUA_VERSION$akc_default aka ${akc_good}$AKUA_VERSION_FULL"

docker build -t akshaal/akua:$AKUA_VERSION --build-arg AKUA_VERSION="$AKUA_VERSION_FULL" src || exit 202

keep_versions=3

clean() {
    ids=$(docker image inspect -f "{{ .Created }} {{ .Id }}" $(docker image ls akshaal/akua$1 -q --no-trunc) | sort -r | cut -f2 -d" " | tail -n +`expr $keep_versions + 1`)

    IFS=$'\n'
    for id in $ids; do
        info "${akc_good}Removing an old image: ${akc_value}$(docker image inspect -f '{{.RepoTags}}' $id)${akc_default}"
        docker image rm "$id"
    done
}

clean ""

echo
info "Current images:"
docker image ls akshaal/akua
